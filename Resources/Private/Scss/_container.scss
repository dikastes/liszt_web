.container {
  width: 100%;
  margin-right: auto;
    margin-left: auto;
    padding-right: $container-padding-x;
    padding-left: $container-padding-x;
}

.container-xl {
    @include media-breakpoint-between(lg, xl) {
        padding-right: calc($container-padding-x * 2);
        padding-left: calc($container-padding-x * 2);
    }

        @include media-breakpoint-up(xl) {
        padding-right: 0;
        padding-left: 0;
    }
}


// Responsive containers that are 100% wide until a breakpoint
@each $breakpoint, $container-max-width in $container-max-widths {
    .container-#{$breakpoint} {
        @extend .container;
    }

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
        %responsive-container-#{$breakpoint} {
            max-width: $container-max-width;
        }

        // Extend each breakpoint which is smaller or equal to the current breakpoint
        $extend-breakpoint: true;

        @each $name, $width in $grid-breakpoints {
            @if ($extend-breakpoint) {
                .container#{breakpoint-infix($name, $grid-breakpoints)} {
                    @extend %responsive-container-#{$breakpoint};
                }

                // Once the current breakpoint is reached, stop extending
                @if ($breakpoint == $name) {
                    $extend-breakpoint: false;
                }
            }
        }
    }
}

// Todo: create a mixin for this
.grid {
    display: grid;
    gap: 1rem;
    &-2col {
        &-md {
            @include media-breakpoint-up(md) {
                grid-template-columns: repeat(2, 1fr);
                gap: $desktop-design-space;
            }
        }
        &-lg {
            @include media-breakpoint-up(lg) {
                grid-template-columns: repeat(2, 1fr);
                gap: $desktop-design-space;
            }
        }
    }
    &-3col {
        &-md {
            @include media-breakpoint-up(md) {
                grid-template-columns: repeat(3, 1fr);
                gap: $desktop-design-space;
            }
        }
        &-lg {
            @include media-breakpoint-up(lg) {
                grid-template-columns: repeat(3, 1fr);
                gap: $desktop-design-space;
            }
        }
    }
    &-4col {
        &-md {
            @include media-breakpoint-up(md) {
                grid-template-columns: repeat(4, 1fr);
                gap: $desktop-design-space;
            }
        }
        &-lg {
            @include media-breakpoint-up(lg) {
                grid-template-columns: repeat(4, 1fr);
                gap: $desktop-design-space;
            }
        }
    }
}

.grid-colspan-md-2 {
    @include media-breakpoint-up(md) {
        grid-column: span 2;
    }
}



